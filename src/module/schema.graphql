type Query {
  getMyProfile: User!
  getAllTrainees(options: getAllOptions): getAllUsers
  getEmployees: [employee]
  getPermission(id: getOne): permissiongetResponse
}

type Mutation {
  createTrainee(user: createUserInput): trainee!
  updateTrainee(user: updateUserInput): trainee!
  deleteTrainee(id:ID!): deletedTrainee!
  loginUser(payload: Payload!): LoginResponse!
  createEmployee(employee: createEmployeeInput): employee!
  updatePermission(data: updatePermissionInput!): permissionupdateResponse!
}

type Subscription {
  traineeAdded: trainee!
  traineeUpdated: trainee!
  traineeDeleted: deletedTrainee!
  updatePermissions: permissionupdateResponse!
}
